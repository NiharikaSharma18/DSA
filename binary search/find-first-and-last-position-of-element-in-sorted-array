class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
       vector<int> ans;
        int k=first(nums,target);
        int l=last(nums,target);
          if (k == -1 || l == -1) {
            ans.push_back(-1);
            ans.push_back(-1);
        } else {
            ans.push_back(k);
            ans.push_back(l);
        }
       
return ans;
    }
    int first(vector<int> &nums,int target){
int s=0,end=nums.size()-1;
int res=-1;
while(s<=end){
    int mid=(s+end)/2;
    
        if(nums[mid]==target){
          res=mid;
          end=mid-1;
        }
        else if(nums[mid]>target)
        end=mid-1;
        else if(nums[mid]<target)
        s=mid+1;
    }

return res;    }
    int last(vector<int> &nums,int target){
   int s=0,end=nums.size()-1;     
   int res=-1;
while(s<=end){
    int mid=(s+end)/2;
   
        if(nums[mid]==target){
          res=mid;
          s=mid+1;
        }
        else if(nums[mid]>target)
        end=mid-1;
        else if(nums[mid]<target)
        s=mid+1;
    }
    return res;
    }
};
