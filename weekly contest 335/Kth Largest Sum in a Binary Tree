class Solution {
public:
    long long kthLargestLevelSum(TreeNode* root, int k) { long long sum=0;
        if (root==NULL)
            return 0;
        queue<TreeNode*> q;
                                                         q.push(root);
                                                         priority_queue<long long, vector<long long>, greater<long long>> hp;
                                                         while(!q.empty()){
                                                         
                                                             sum=0;
                                                             int size=q.size();
                                                             for(int i=0;i<size;i++){
                                                                    TreeNode* n=q.front() ;
                                                                 q.pop();
                                                                  sum=sum+n->val;
                                                               if (n->left != NULL)
                                                                q.push(n->left);
 
        
                                                             if (n->right != NULL)
                                                              q.push(n->right);
                                                                 }
                                                          
                                                           hp.push(sum);
                                                             if(hp.size()>k)
                                                                 hp.pop();
        
                                                             
                                                         }
                                                         if(hp.size()<k)
                                                             return -1;
    return hp.top();}
};
