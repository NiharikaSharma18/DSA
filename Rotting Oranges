classSolution{
public:
intorangesRotting(vector<vector<int>>&grid){
intn=grid.size();
intm=grid[0].size();
intvis[n][m];
queue<pair<pair<int,int>,int>>q;
for(inti=0;i<n;i++){
for(intj=0;j<m;j++){
if(grid[i][j]==2){
q.push({{i,j},0});
vis[i][j]=2;
}
else{
vis[0][0]=0;
}}}
inttm=0;
intdrow[4]={-1,0,1,0};
intdcol[4]={0,1,0,-1};
intct=0;
while(!q.empty()){
intr=q.front().first.first;
intc=q.front().first.second;
intt=q.front().second;
tm=max(tm,t);
q.pop();
for(inti=0;i<4;i++){
intnrow=r+drow[i];
intncol=c+dcol[i];
if(nrow>=0&&nrow<n&&ncol>=0&&ncol<m&&vis[nrow][ncol]!=2&&grid[nrow][ncol]==1){
q.push({{nrow,ncol},t+1});
vis[nrow][ncol]=2;}
}}
for(inti=0;i<n;i++){
for(intj=0;j<m;j++){
if(vis[i][j]!=2&&grid[i][j]==1)
return-1;
}}
returntm;
}
};
